/* Some global variables so that argument list of the 
   different functions are less than 8 lines long.
   They are just declared here. Could be a good
   idea to set all of them once and for all in the same
   place
*/

/* Value that stops the algorithm if reached by t
 */
extern double g_dEpsilon_anirl;

/* Number of iterations after which the ANIRL loop
   is stopped, even if the t<g_dEspilon_anirl criterion is 
   not matched */
extern unsigned int g_iIt_max_anirl;

//Discount factor for ANIRL
extern double g_dGamma_anirl;

//Dimension of the \psi generated feature space
extern unsigned int g_iP;

//S\rightarrow\mathbb{R}^p features over which \mu is computed
extern gsl_matrix* (*g_fPsi)(gsl_matrix*);

/* Where to store the expert's omega */
extern gsl_matrix* g_mOmega_E;

//Simulator whose argument is the number of trajectories
extern gsl_matrix* (*g_fSimulator)(int);

//Number of transitions generated by the simulator
extern unsigned int g_iNb_samples;

/* Regularisation is needed when computing the mu of a good 
   policy because only a handful of state action
   couples are visited, thus making the A matrix singular */
extern double g_dLambda_lstdmu; 

/* When using ANIRL, we store the best score when
   the measured error is at its lowest yet. This does not
   mean that the other criteria (especially t) also are at 
   their lowest.
   These are declared in abbeel2004apprenticeship.c
   but also used in LSTDmu.c
*/
extern double g_dBest_error;
extern double g_dBest_true_error;
extern double g_dBest_diff;
extern double g_dBest_t;
