#+TITLE: Inverted Pendulum
  The Inverted Pendulum is a classical toy problem, used and described for example in \cite{lagoudakis2003least}.

//FIXME Virer LAFEM_Exp5 qui manifestement n'existe pas

* Miscellaneaous

** Org files
  The .org files containing both some code and its documentation are :
  #+begin_src make :tangle Makefile
ORG_CODE_FILES=Makefile.org first.org generator.org InvertedPendulum.org plot.org simulator.org
  #+end_src
** Documentation
   Documentation can be extracted from the .org files by executing
   #+begin_src sh
 make doc
   #+end_src

   which triggers the following rules :

   #+begin_src make :tangle Makefile
HTML_FILES=$(ORG_CODE_FILES:.org=.html)

doc: $(HTML_FILES)

%.html:%.org
	emacs -batch --visit $*.org --funcall org-export-as-html-and-open --script ~/.emacs
   #+end_src
** Code extraction

   The code embedded in the .org can be tangled.
    #+begin_src make :tangle Makefile
code:
	cat *.org > All.org; emacs -batch --visit All.org --funcall org-babel-tangle --script ~/.emacs; rm All.org
    #+end_src
    
** Cleaning
  Two different target exists for cleaning.

  clean does regular cleaning : 
  
    #+begin_src make :tangle Makefile
clean:
	find . -maxdepth 1 -iname "*.o"       | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.pdf"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.exe"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.dat"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*~"        | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.samples" | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.pyc"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.eps"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*.tex"     | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "first.c"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "plot.c"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "generator.c"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "InvertedPendulum.h"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "InvertedPendulum.c"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "simulator.h"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "simulator.c"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "code"   | xargs $(XARGS_OPT) rm &&\
	find . -maxdepth 1 -iname "*-0"       | xargs $(XARGS_OPT) rm
    #+end_src

  nuke removes the data generated by the ErrorBars.py script, which may take a very long time to generate. Hence a separated target to avoid accidents.

    #+begin_src make :tangle Makefile
nuke: #You probably don't want to make this one
	find ErrorBars/ -maxdepth 1 -iname "*.dat*" | xargs $(XARGS_OPT) rm
    #+end_src
* Makefiles rules
  The rules are written in the file they work with. They are recalled here, because the Makefile should only be tangled from Makefile.org. Otherwise, tangling LSPI.org, for example, would overwrite LSPI.h and LSPI.c, which is expected, but also Makefile, which is not. Therefore the other .org files only define named code snippets that are recalled and tangled here.
** Misc.
Those who do not fit in the others categories (because they fit in more than one or none of them) are aggregated here :
  #+begin_src makefile :tangle Makefile :noweb yes
<<LSTDmu_Exp_make>>
<<LAFEM_Exp2_make>>
<<LAFEM_Exp3_make>>
<<LAFEM_Exp4_make>>
<<LAFEM_Exp5_make>>
<<LAFEM_Exp7_make>>
  #+end_src
** Code extraction
  #+begin_src makefile :tangle Makefile :noweb yes
tangle=tangle $1

<<Generator_code_make>>
<<InvertedPendulum_code_make>>
<<Simulator_code_make>>
<<LSTDmu_Exp_code_make>>
  #+end_src
** C source to .o file
  #+begin_src make :tangle Makefile :noweb yes
  CFLAGS+= -I..
c2obj=gcc $(CFLAGS) -c $1

   #+end_src
  #+begin_src makefile :tangle Makefile :noweb yes
<<Generator_c2o_make>>
<<InvertedPendulum_c2o_make>>
<<Simulator_c2o_make>>
<<LSTDmu_Exp_c2o_make>>
  #+end_src
** .o to .exe
  #+begin_src makefile :tangle Makefile :noweb yes
O2EXE=gcc $(LFLAGS)
<<Generator_o2exe_make>>
<<LSTDmu_Exp_o2exe_make>>
  #+end_src

** Cleaning
    #+begin_src makefile :tangle Makefile :noweb yes
<<Generator_clean_make>>
<<InvertedPendulum_clean_make>>
<<Simulator_clean_make>>
<<LSTDmu_Exp_clean_make>>
<<LAFEM_Exp2_clean_make>>
<<LAFEM_Exp3_clean_make>>
<<LAFEM_Exp4_clean_make>>
<<LAFEM_Exp5_clean_make>>
clean: Generator_clean InvertedPendulum_clean Simulator_clean LSTDmu_Exp_clean LAFEM_Exp2_clean LAFEM_Exp3_clean LAFEM_Exp4_clean LAFEM_Exp5_clean

    #+end_src


** Inception

   #+begin_src makefile :tangle Makefile :noweb yes
Makefile:
	cat *.org > All.org; tangle All.org; rm All.org
   #+end_src
