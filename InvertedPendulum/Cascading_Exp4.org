#+TITLE: Cascading IRL on the Inverted Pendulum

* Computation
#+begin_src python :tangle Cascading_Exp4.py
import sys
sys.path+=['..']
from numpy import *
import scipy
import Cascading
import InvertedPendulum
from subprocess import call
from DP import *
from DP_mu import *


D_E = genfromtxt( sys.argv[1] )
assert D_E[-1,6] == 0 #End of episode ?
Data = map( lambda trans: [trans[0:2],trans[2:3][0],trans[3:5],trans[6:7][0]], D_E ) #s,a,s',eoe 
theta_E,theta_C,omega_Q = Cascading.run( Data, InvertedPendulum.psi, InvertedPendulum.phi, InvertedPendulum.A )

savetxt( "Cascading_Exp4_theta.mat", theta_C, "%e", "\n" );
savetxt( "Cascading_Exp4_omega.mat", omega_Q, "%e", "\n" );
print "%d\t"%D_E.shape[0],
sys.stdout.flush()
call([ "./Evaluate_theta.exe","Cascading_Exp4_theta.mat"])
print "\t",
sys.stdout.flush()
call([ "./Evaluate_omega.exe","Cascading_Exp4_omega.mat"])
print

#+end_src

#+srcname: Cascading_Exp4_make
#+begin_src makefile
Cascading_Exp4.py: Cascading_Exp4.org
	$(call tangle,"Cascading_Exp4.org")

LM_VALUES="30 1" "30 10" "30 100"
Cascading_Exp4: Cascading_Exp4.py InvertedPendulum.py ../Cascading.py ../LAFEM.py DE.exe ../a2str.py Random_Samples.mat Evaluate_omega.exe Evaluate_theta.exe
	for i in $(LM_VALUES); \
	do \
	./DE.exe $$i > DE.mat; \
	python Cascading_Exp4.py DE.mat >> Cascading_Exp4.mat; \
	done


../Cascading.py:
	make -C .. Cascading.py

#+end_src

* Plotting
#+begin_src python :tangle Cascading_Exp4_plot.py
from matplotlib import rc
rc('text', usetex=True)
import sys
sys.path+=['..']
from numpy import *
import scipy
import pylab as pylab
from Plot import *

D_Cascading = genfromtxt( "Cascading_Exp4.mat" )
D_C = D_Cascading[:,[0,1]]
D_Classif = D_Cascading[:,[0,2]]
myPlot = Plot()
myPlot.Expert = 4.11057591 #python Expert.py to get this value
myPlot.Random_mean = 0.48848324670295395#See Highway.org about Random.py for information on these values
myPlot.Random_min = 0.069469005947400006#python Random.py to get this value
myPlot.Random_max = 3.2720195801399998#python Random.py to get this value
myPlot.Random_var = 0.57868038965027513#python Random.py to get this value

myPlot.ymin = -1
myPlot.ymax = 5

myPlot.plot( D_C, 'orange', 'Cascading_Exp4_fig1.pdf' )
myPlot.plot( D_Classif, 'yellow', 'Cascading_Exp4_fig2.pdf' )

#+end_src

#+srcname: Cascading_Exp4_make
#+begin_src makefile
Cascading_Exp4_plot.py: Cascading_Exp4.org
	$(call tangle,"Cascading_Exp4.org")

Cascading_Exp4_fig1.pdf: Cascading_Exp4_plot.py Cascading_Exp4.mat ../Plot.py
	python Cascading_Exp4_plot.py
#+end_src


* Stuff
  #+srcname: Cascading_Exp4_clean_make
  #+begin_src makefile
Cascading_Exp4_clean:
	find . -maxdepth 1 -iname "Cascading_Exp4.py"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "Cascading_Exp4.tex"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "Cascading_Exp4_*"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "Cascading_Exp4.mat"   | xargs $(XARGS_OPT) rm
  #+end_src
