#+TITLE: Test de Relative Entropy IRL sur le GridWorld

Le but ici est de tester si j'ai réussi à manipuler le code de Senthil suffisament bien pour qu'il fonctionne.

#+begin_src c :tangle REntropy_Exp1.c
#include <gsl/gsl_matrix.h>
#include <gsl/gsl_vector.h>
#include "RelativeEntropy.h"
#include "RL_Globals.h"
#include "IRL_Globals.h"
#include "phipsi.h"

/*Global variables and macros for REIRL code*/


unsigned int g_iS = 2;
unsigned int g_iA = 1;
gsl_matrix* (*g_fPhi)(gsl_matrix*) = &phi;
unsigned int Acount = 4;
gsl_vector* theta = NULL; //Tabular reward over state-action space
gsl_vector* delta_theta  = NULL; //update of the gradient descent
gsl_vector* uniform_feature = NULL;
gsl_vector* tmp_uniform_feature = NULL;
unsigned int NoEpisodes = -1;
gsl_matrix* uniform_matrix = NULL;
gsl_vector* dlength = NULL;
gsl_vector* scalar_value = NULL;
gsl_vector* expert_feature = NULL;
unsigned int NoSteps = 50000; //Max number of iterations
double Eta = 0.01;
double Alpha = 0.05;
double Convergence = 0.01;
double g_dGamma_anirl = 0.9;

#define _GNU_SOURCE
#include <fenv.h>


int main( int argc, char** argv ){
 int feenableexcept();
 feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW );


  theta = gsl_vector_calloc(g_iK); //Tabular reward over state-action space
  delta_theta  = gsl_vector_calloc(g_iK); //update of the gradient descent
  uniform_feature = gsl_vector_calloc(g_iK);
  tmp_uniform_feature = gsl_vector_calloc(g_iK);
  
  populateUniformMatrix( argv[1] );
  populateExpertFeature( argv[2] );
  gradientDescent();
  for( int i=0; i<g_iK; i++){
    printf( "%e\n", gsl_vector_get( theta, i ));
  }
  return 0;
}


#+end_src

#+srcname: REntropy_Exp1_make
#+begin_src makefile
REntropy_Exp1.c: REntropy_Exp1.org
	$(call tangle,"REntropy_Exp1.org")

REntropy_Exp1.o: REntropy_Exp1.c ../RelativeEntropy.h ../RL_Globals.h ../IRL_Globals.h
	$(call c2obj,"REntropy_Exp1.c")

REntropy_Exp1.exe: REntropy_Exp1.o ../RelativeEntropy.o ../utils.o phipsi.o
	$(O2EXE) -o REntropy_Exp1.exe REntropy_Exp1.o ../RelativeEntropy.o ../utils.o phipsi.o

REntropy_Exp1: REntropy_Exp1.exe DE.py DU.py ../DP.py ../DP_mu.py V_Expert.mat
	python DE.py 100 100 > DE.mat
	python DU.py 100 100 > DU.mat
	./REntropy_Exp1.exe DU.mat DE.mat > Rentropy_theta.mat
	python EvaluateThetaSA.py Rentropy_theta.mat

../RelativeEntropy.h:
	make -C .. RelativeEntropy.h
../RelativeEntropy.o:
	make -C .. RelativeEntropy.o

REntropy_Exp1_clean: 
	find . -maxdepth 1 -iname "REntropy_Exp1.c"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "REntropy_Exp1.h"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "REntropy_Exp1.o"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "REntropy_Exp1.exe"   | xargs $(XARGS_OPT) rm
	find . -maxdepth 1 -iname "DU.mat"   | xargs $(XARGS_OPT) rm


#+end_src
