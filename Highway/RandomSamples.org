#+TITLE:Generating random samples using the Highway driving simulator

   On peut instancier l'application pour qu'elle génère des samples aléatoires :
   #+begin_src python :tangle RandomSamples.py
from App import *

root = Tk()
app = App(root)
app.autopilot = 'random'
app.max_t=2000
root.mainloop()

   #+end_src

   On peut lancer cette génération grâce aux règles suivantes :
   #+srcname: RandomSamples_make
#+begin_src makefile
RandomSamples.py: RandomSamples.org
	$(call tangle,"RandomSamples.org")

RandomSamples.dat: RandomSamples.py App.py
	python RandomSamples.py > toto
#+end_src
   A cause de la manière dont les échantillons sont affichés, il faut se débarasser des deux premières lignes ainsi que de la dernière. C'est l'objet de la ligne qui suit :
   #+srcname: RandomSamples_make
#+begin_src makefile
	cat toto | head -n $$(($$(cat toto | wc -l) -1 )) | tail -n $$(($$(cat toto | wc -l) -1 - 2 )) > tata
#+end_src

   Les samples générés ont la forme $s,a,s'$, or l'implémentation de LSPI que nous utilisons a besoin en entrée d'échantillons de la forme $s,a,s',r,e$ avec $r$ la récompense et $e$ le flag de fin d'épisode, qui vaut 0 en fin d'épisode et 1 sinon. Pour notre premier test, nous pénalisons les sorties de routes et les collisions d'un point chacune. L'épisode est éternel. Le petit bout de awk qui suit implémente ceci :
   #+srcname: RandomSamples_make
#+begin_src makefile
	cat tata | awk '{printf $$0" "($$4+$$5)*-1" ";if( $$9 == 10) print 0 ;else print 1}'> RandomSamples.dat
	rm toto tata
#+end_src

